// <auto-generated />
using Fuse8_ByteMinds.SummerSchool.PublicApi.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Fuse8_ByteMinds.SummerSchool.PublicApi.Migrations
{
    [DbContext(typeof(CurrencyFavouritesAndSettingsDbContext))]
    partial class CurrencyFavouritesAndSettingsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("user")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Fuse8_ByteMinds.SummerSchool.PublicApi.DbContexts.Entities.CurrencyFavourite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BaseCurrency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("base_currency");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("currency");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_favourites_currencies_rates");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_favourites_currencies_rates_name");

                    b.HasIndex("Currency", "BaseCurrency")
                        .IsUnique()
                        .HasDatabaseName("ix_favourites_currencies_rates_currency_base_currency");

                    b.ToTable("favourites_currencies_rates", "user", t =>
                        {
                            t.HasCheckConstraint("CK_favourites_currencies_rates_base_currency_MinLength", "LENGTH(base_currency) >= 3");

                            t.HasCheckConstraint("CK_favourites_currencies_rates_currency_MinLength", "LENGTH(currency) >= 3");
                        });
                });

            modelBuilder.Entity("Fuse8_ByteMinds.SummerSchool.PublicApi.DbContexts.Entities.CurrencySettings", b =>
                {
                    b.Property<long>("CurrencyRoundCount")
                        .HasColumnType("bigint")
                        .HasColumnName("currency_round_count");

                    b.Property<string>("DefaultCurrency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("default_currency");

                    b.ToTable("settings", "user", t =>
                        {
                            t.HasCheckConstraint("CK_settings_default_currency_MinLength", "LENGTH(default_currency) >= 3");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
